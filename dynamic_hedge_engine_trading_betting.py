# –í—Ö–æ–¥–Ω–∏ –¥–∞–Ω–Ω–∏
print("üé∞ –°–ò–°–¢–ï–ú–ê –ó–ê –•–ï–î–ñ–ò–†–ê–ù–ï –° –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û –†–ê–ó–ü–†–ï–î–ï–õ–Ø–ù–ï")
print("=" * 113)

coef = [float(x) for x in input("–í—ä–≤–µ–¥–µ—Ç–µ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ (1 X 2): ").split()]
bets = [float(x) for x in input("–í—ä–≤–µ–¥–µ—Ç–µ –∑–∞–ª–æ–∑–∏ (1 X 2): ").split()]

total_income = sum(bets)

print(f"\nüìä –í–•–û–î–ù–ò –î–ê–ù–ù–ò:")
print(f"1: {bets[0]}–ª–≤ @ {coef[0]}")
print(f"X: {bets[1]}–ª–≤ @ {coef[1]}")
print(f"2: {bets[2]}–ª–≤ @ {coef[2]}")
print(f"–û–±—â –ø—Ä–∏—Ö–æ–¥: {total_income}–ª–≤")
print("=" * 113)

# –•–µ–¥–∂–∏—Ä–∞—â–∏ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ (2% –¥–∏—Å–∫–æ–Ω—Ç)
hedge_coefs = [coef[0] * 0.98, coef[1] * 0.98, coef[2] * 0.98]

# –°–¢–™–ü–ö–ê 1: –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–∞–π-—Ä–∏—Å–∫–æ–≤–∏—è –∏–∑—Ö–æ–¥
payouts = [bets[i] * coef[i] for i in range(3)]
risks = [payout - total_income for payout in payouts]

most_risky_index = risks.index(max(risks))
most_risky_risk = risks[most_risky_index]
most_risky_payout = payouts[most_risky_index]

print(f"\nüîç –ê–ù–ê–õ–ò–ó –ù–ê –†–ò–°–ö–ê:")
for i in range(3):
    outcome = ["1", "X", "2"][i]
    status = "‚ö†Ô∏è" if risks[i] > 0 else "‚úÖ"
    print(f"   {outcome}: {risks[i]:.0f}–ª–≤ {status}")

# –°–¢–™–ü–ö–ê 2: –•–µ–¥–∂–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–∞–π-—Ä–∏—Å–∫–æ–≤–∏—è –∏–∑—Ö–æ–¥
if most_risky_risk > 0:
    hedge_risky_amount = most_risky_risk / (hedge_coefs[most_risky_index] - 1)
    print(f"\nüõ°Ô∏è –•–ï–î–ñ –ù–ê –ù–ê–ô-–†–ò–°–ö–û–í–ò–Ø –ò–ó–•–û–î ({['1', 'X', '2'][most_risky_index]}):")
    print(f"   –§–æ—Ä–º—É–ª–∞: {most_risky_risk:.0f} / ({hedge_coefs[most_risky_index]:.2f} - 1) = {hedge_risky_amount:.0f}–ª–≤")
else:
    hedge_risky_amount = 0
    print(f"\n‚úÖ –ù–Ø–ú–ê –†–ò–°–ö –ó–ê –•–ï–î–ñ–ò–†–ê–ù–ï")

# –°–¢–™–ü–ö–ê 3: –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–∞–π-–≤–∏—Å–æ–∫–∏—è –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç –∑–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–∞–Ω–µ –Ω–∞ 0 —Ä–µ–∑—É–ª—Ç–∞—Ç
highest_coef_index = coef.index(max(coef))
highest_coef_payout = payouts[highest_coef_index]

print(f"\nüéØ –ì–ê–†–ê–ù–¢–ò–†–ê–ù–ï –ù–ê 0 –ó–ê –ù–ê–ô-–í–ò–°–û–ö–ò–Ø –ö–û–ï–§ ({['1', 'X', '2'][highest_coef_index]} @ {coef[highest_coef_index]}):")
print(f"   –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª–Ω–æ –ø–ª–∞—â–∞–Ω–µ: {highest_coef_payout:.0f}–ª–≤")

# –°–¢–™–ü–ö–ê 4: –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –æ—Å—Ç–∞—Ç—ä–∫–∞ –≤ –∫–∞—Å–∞—Ç–∞
cash_after_hedge = total_income - hedge_risky_amount
excess_cash = cash_after_hedge - highest_coef_payout

print(f"\nüí∞ –ö–ê–°–û–í–ê –°–ò–¢–£–ê–¶–ò–Ø:")
print(f"   –ö–∞—Å–∞ —Å–ª–µ–¥ —Ö–µ–¥–∂: {cash_after_hedge:.0f}–ª–≤")
print(f"   –ò–∑–ª–∏—à—ä–∫ –∑–∞ —Ä–∞–∑–ø—Ä–µ–¥–µ–ª—è–Ω–µ: {excess_cash:.0f}–ª–≤")

# –°–¢–™–ü–ö–ê 5: –†–∞–∑–ø—Ä–µ–¥–µ–ª—è–Ω–µ –Ω–∞ –∏–∑–ª–∏—à—ä–∫–∞
hedge_amounts = [0, 0, 0]

if excess_cash > 0:
    other_outcomes = [i for i in range(3) if i != highest_coef_index]
    sum_other_hedge_coef = hedge_coefs[other_outcomes[0]] + hedge_coefs[other_outcomes[1]]
    base_amount = excess_cash / sum_other_hedge_coef

    print(f"\nüîÑ –†–ê–ó–ü–†–ï–î–ï–õ–Ø–ù–ï –ù–ê –ò–ó–õ–ò–®–™–ö–ê:")
    print(
        f"   –°—É–º–∞ –Ω–∞ —Ö–µ–¥–∂ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏—Ç–µ: {hedge_coefs[other_outcomes[0]]:.2f} + {hedge_coefs[other_outcomes[1]]:.2f} = {sum_other_hedge_coef:.2f}")
    print(f"   –ë–∞–∑–æ–≤–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç: {excess_cash:.0f} / {sum_other_hedge_coef:.2f} = {base_amount:.0f}–ª–≤")

    for i in other_outcomes:
        other_coef = hedge_coefs[[x for x in other_outcomes if x != i][0]]
        hedge_amounts[i] = other_coef * base_amount
        print(f"   {['1', 'X', '2'][i]}: {other_coef:.2f} √ó {base_amount:.0f} = {hedge_amounts[i]:.0f}–ª–≤")

# –°–¢–™–ü–ö–ê 6: –§–ò–ù–ê–õ–ù–ò –†–ï–ó–£–õ–¢–ê–¢–ò
print(f"\nüé≤ –§–ò–ù–ê–õ–ù–ê –°–ò–ú–£–õ–ê–¶–ò–Ø:")
print("=" * 113)

total_hedge = hedge_risky_amount + sum(hedge_amounts)
final_cash = total_income - total_hedge

for i in range(3):
    outcome = ["1", "X", "2"][i]
    payout = payouts[i]

    hedge_income = 0
    if i == most_risky_index:
        hedge_income += hedge_risky_amount * hedge_coefs[i]
    if hedge_amounts[i] > 0:
        hedge_income += hedge_amounts[i] * hedge_coefs[i]

    if i == highest_coef_index:
        result = 0  # –ì–∞—Ä–∞–Ω—Ç–∏—Ä–∞–Ω–æ 0 –∑–∞ –Ω–∞–π-–≤–∏—Å–æ–∫–∏—è –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç
    else:
        result = final_cash + hedge_income - payout

    margin = (result / total_income) * 100

    print(f"üîÆ {outcome}:")
    print(f"   üí∞ –ö–∞—Å–∞: {final_cash:.0f}–ª–≤")
    if hedge_income > 0:
        print(f"   üì• –•–µ–¥–∂: +{hedge_income:.0f}–ª–≤")
    print(f"   üì§ –ü–ª–∞—â–∞–Ω–µ: -{payout:.0f}–ª–≤")
    print(f"   üíµ –†–ï–ó–£–õ–¢–ê–¢: {result:.0f}–ª–≤ ({margin:+.1f}% –æ—Ç –æ–±—â–∏—è –ø—Ä–∏—Ö–æ–¥)")
    print("-" * 40)

print(f"\nüìà –û–ë–©–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
print(f"   –û–±—â –ø—Ä–∏—Ö–æ–¥: {total_income:.0f}–ª–≤")
print(f"   –û–±—â —Ö–µ–¥–∂: {total_hedge:.0f}–ª–≤")
print(f"   –ö–∞—Å–∞ —Å–ª–µ–¥ –≤—Å–∏—á–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏: {final_cash:.0f}–ª–≤")
print("=" * 113)

print("üéØ –°–ò–°–¢–ï–ú–ê–¢–ê –ü–†–ò–ö–õ–Æ–ß–ò–õ–ê!")

